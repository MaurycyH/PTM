<UserControl x:Class="PTM.Terminal.TaskBoards.CtrlTaskBoardListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PTM.Terminal.TaskBoards"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>

            <Color x:Key="BackgroundTaskLabelsColor">#ffffff</Color>
            <Color x:Key="BackgroundTaskLabelsOnMouseOverColor">#edebe9</Color>
            <Color x:Key="BackgroundTasksTitleColor">#6264a7</Color>
            <Color x:Key="BackgroundReturnButtonColorWhite">#f3f2f1</Color>
            <Color x:Key="ForegroundReturnButton">#6f6e6d</Color>
            <Color x:Key="ForegroundReturnButtonOnMouseOver">#8b8cc7</Color>
            <SolidColorBrush x:Key="BrushBackgroundTaskLabelsColor" Color="{StaticResource BackgroundTaskLabelsColor}"/>
            <SolidColorBrush x:Key="BrushBackgroundTaskLabelsOnMouseOverColor" Color="{StaticResource BackgroundTaskLabelsOnMouseOverColor}"/>
            <SolidColorBrush x:Key="BrushBackgroundTasksTitleColor" Color="{StaticResource BackgroundTasksTitleColor}"/>
            <SolidColorBrush x:Key="BrushForegroundReturnButton" Color="{StaticResource ForegroundReturnButton}"/>
            <SolidColorBrush x:Key="BrushForegroundReturnButtonOnMouseOver" Color="{StaticResource ForegroundReturnButtonOnMouseOver}"/>
            <SolidColorBrush x:Key="BrushBackgroundReturnButtonColorWhite" Color="{StaticResource BackgroundReturnButtonColorWhite}"/>

            <Style x:Key="TaskBoardControl_TaskBoardDisplay" TargetType="Border">
                <Setter Property="Height" Value="50"/>
                <Setter Property="CornerRadius" Value="3"/>
                <Setter Property="BorderThickness" Value="0.5"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="Margin" Value="0,0,30,10"/>
                <Setter Property="Background" Value="{StaticResource BrushBackgroundTaskLabelsColor}"/>
            </Style>
            <Style x:Key="HiddenButton" TargetType="{x:Type Button}">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Opacity" Value="0.3"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Background" Value="{StaticResource BrushBackgroundTaskLabelsColor}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource BrushBackgroundTaskLabelsOnMouseOverColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="RemoveTaskButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="Margin" Value="0,3,6,3"/>
                <Setter Property="FontFamily" Value="Segoe"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Foreground" Value="{StaticResource BrushForegroundReturnButton}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource BrushForegroundReturnButtonOnMouseOver}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <ItemsPanelTemplate x:Key="ContainersResources">
                <StackPanel Orientation="Vertical"/>
            </ItemsPanelTemplate>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/PTM.Terminal;component/Resources/MergedDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <!--Niezakończone WorkItemy (Nie Funkcjonuje Jeszcze)-->
        <Border Grid.Row="1" Height="400" MaxWidth="350" VerticalAlignment="Top"
                BorderBrush="Gray" BorderThickness="0.3" Margin="10" CornerRadius="3">
            <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Label Content="{StaticResource IDS_TaskBoardListView_UnfinishedWorkItems}"
                       HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                       Background="{StaticResource BrushBackgroundTasksTitleColor}" DockPanel.Dock="Top" MinHeight="40" BorderThickness="0" Foreground="{StaticResource BrushTextPanelColor}" FontWeight="DemiBold" FontSize="15"/>
                <ScrollViewer DockPanel.Dock="Top" VerticalScrollBarVisibility="Auto" BorderThickness="0.5" BorderBrush="Gray">
                    <ItemsControl ItemsPanel="{StaticResource ContainersResources}" ItemsSource="{Binding OstatnieWorkItemy}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Height="25" BorderBrush="Black" BorderThickness="0.5"
                                        Margin="5" Background="{Binding DoKoloruTaska}">
                                    <DockPanel>
                                        <CheckBox DockPanel.Dock="Right" VerticalAlignment="Center"/>
                                        <TextBlock Text="work item" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                                    </DockPanel>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </DockPanel>
        </Border>
        <!--Lista TaskBoardów-->
        <ScrollViewer Grid.Column="1" Grid.Row="1" Margin="10" VerticalScrollBarVisibility="Auto">
            <StackPanel Orientation="Vertical">
                <ItemsControl ItemsPanel="{StaticResource ContainersResources}" ItemsSource="{Binding TaskBoards}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Style="{StaticResource TaskBoardControl_TaskBoardDisplay}">
                                <Grid>
                                    <Button Style="{StaticResource HiddenButton}"
                                        Command="{Binding DataContext.SelectTaskBoardCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                        CommandParameter="{Binding TaskBoard}"/>
                                    <!--Ten binding może służyć do przekazania klikniętego taskboardu dalej-->
                                    <TextBox Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{x:Null}" BorderThickness="0"/>
                                    <Button Content="X" HorizontalAlignment="Right" Width="22" Height="18" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                        Command="{Binding DataContext.DeleteTaskBoardCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                        CommandParameter="{Binding .}" Style="{StaticResource RemoveTaskButtonStyle}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Border Style="{StaticResource TaskBoardControl_TaskBoardDisplay}"
                        Margin="30, 0, 60, 0">
                    <Grid>
                        <Label Content="{StaticResource IDS_TaskBoardListView_NewTaskBoard}"
                            VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Foreground="{StaticResource BrushTextColor}" FontWeight="DemiBold" FontSize="15"/>
                        <Button Style="{StaticResource HiddenButton}" Command="{Binding CreateTaskBoardCommand}" />
                    </Grid>
                </Border>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
